package main

import (
	_ "api/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/burgesQ/gommon/log"
	"github.com/burgesQ/webfmwk/v4"
	"github.com/burgesQ/webfmwk/v4/handler"
	httpSwagger "github.com/swaggo/http-swagger"
)

var (
	version = "undef"
)

// @Summary Fetch the API version
// @Description Handler to fetch the api version
// @Param pretty query bool false "return a pretty JSON"
// @Success 200 {object} webfmwk.Response
// @Produce application/json
// @Router /v1/version [get]
// @Tags Utils
func getVersion(c webfmwk.Context) error {
	return c.JSONOk(webfmwk.Response{Content: version})
}

// @title API
// @version 1.0
// @description This is an example API GRPC.
// @termsOfService https://www.youtube.com/watch?v=DLzxrzFCyOs
// @contact.name Quentin Burgess
// @contact.url http://github.com/burgesQ
// @contact.email quentin@frafos.com
// @license.name GFO
// @license.url https://www.youtube.com/watch?v=DLzxrzFCyOs
// @host localhost:4242
// @BasePath /api
func main() {
	log.SetLogLevel(log.LogDEBUG)

	s := webfmwk.InitServer(
		webfmwk.WithLogger(log.GetLogger()),
		webfmwk.SetPrefix("/api/v1"),
		webfmwk.CheckIsUp(),
		webfmwk.WithCORS(),
		webfmwk.WithDocHandler(httpSwagger.WrapHandler),
		webfmwk.WithHandlers(handler.Logging))

	s.GET("/version", getVersion)

	s.DumpRoutes()

	// start asynchronously on :4242
	s.Start(":4242")

	// ctrl+c is handled internaly
	defer s.WaitAndStop()
}
